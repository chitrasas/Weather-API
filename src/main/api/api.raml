#%RAML 1.0 
title: Weather API
version: 1.0.0
baseUri: https://apiname-v1.eu.cloudhub.io/api/{version}
protocols: [ HTTPS  ] 

mediaType: application/json

documentation: 
  - !include documentation/api-doc.raml
     
uses:
  customtype: types/custom-types.raml

#To be used only for Non-hierarchical micro-service architecture  
resourceTypes:
  collection: !include libraries/patterns/collection.raml
  post-only-item: !include libraries/patterns/post-only-item.raml
  file-item: !include libraries/patterns/file-item.raml
  read-only-collection: !include libraries/patterns/read-only-collection.raml 
  read-only-item: !include libraries/patterns/read-only-item.raml
  read-only-paged-collection: !include libraries/patterns/read-only-paged-collection.raml
  api-status: !include libraries/patterns/api-status.raml
       
traits:
  paginated: !include libraries/traits/pagination.yaml
  sampleQueryParam: !include libraries/traits/sampleQueryParam.yaml
  byCityQueryParam: !include libraries/traits/byCity.raml
  byCityIdQueryParam: !include libraries/traits/byCityId.raml
  byGeographyQueryParam: !include libraries/traits/byGeography.raml
  byZipcodeQueryParam: !include libraries/traits/byZipcode.raml
  byCityForecastQueryParam: !include libraries/traits/byCityForecast.raml
  200-paged-collection: !include libraries/traits/responses/200-paged-collection.raml 
  200-collection: !include libraries/traits/responses/200-collection.raml
  200-file: !include libraries/traits/responses/200-file.raml
  200-item: !include libraries/traits/responses/200-item.raml   
  201-item: !include libraries/traits/responses/201-item.raml 
  202-item: !include libraries/traits/responses/202-item.raml       
  204-response: !include libraries/traits/responses/204-response.raml   
  304-fault: !include libraries/traits/responses/304-fault.raml 
  400-fault: !include libraries/traits/responses/400-fault.raml 
  401-fault: !include libraries/traits/responses/401-fault.raml
  403-fault: !include libraries/traits/responses/403-fault.raml
  404-fault: !include libraries/traits/responses/404-fault.raml
  405-fault: !include libraries/traits/responses/405-fault.raml
  406-fault: !include libraries/traits/responses/406-fault.raml
  407-fault: !include libraries/traits/responses/407-fault.raml
  415-fault: !include libraries/traits/responses/415-fault.raml
  422-fault: !include libraries/traits/responses/422-fault.raml
  429-fault: !include libraries/traits/responses/429-fault.raml
  500-fault: !include libraries/traits/responses/500-fault.raml
  503-fault: !include libraries/traits/responses/503-fault.raml
  504-fault: !include libraries/traits/responses/504-fault.raml
                
securitySchemes:  
  clientIdAuth: !include libraries/security/client-id-auth.raml
    
securedBy: [clientIdAuth]
 
/status:
  type: api-status

#microservices CRUD operations 
/weather:   
  /byCityName:
    description: This API resource is used to fetch the weather based on the name of the city
    get:
      description: This API resource is used to fetch the weather based on the name of the city
      is: [ 200-item: {itemType: customtype.Item , itemExample: !include examples/responses/2xx-item-response.json}, 304-fault,400-fault,401-fault,403-fault,404-fault,405-fault,406-fault,407-fault,415-fault,422-fault,429-fault,500-fault,503-fault,504-fault,
          byCityQueryParam  ] 
  /byCityId:
    description: This API resource is used to fetch the weather based on the ID of the city
    get:
      description: This API resource is used to fetch the weather based on the name of the city
      is: [ 200-item: {itemType: customtype.Item , itemExample: !include examples/responses/2xx-item-response.json}, 304-fault,400-fault,401-fault,403-fault,404-fault,405-fault,406-fault,407-fault,415-fault,422-fault,429-fault,500-fault,503-fault,504-fault,
          byCityIdQueryParam  ] 
  /byGeography:
    description: This API resource is used to fetch the weather based on the geographical location i.e. latitude and longitude of the city
    get:
      description: This API resource is used to fetch the weather based on the name of the city
      is: [ 200-item: {itemType: customtype.Item , itemExample: !include examples/responses/2xx-item-response.json}, 304-fault,400-fault,401-fault,403-fault,404-fault,405-fault,406-fault,407-fault,415-fault,422-fault,429-fault,500-fault,503-fault,504-fault,
          byGeographyQueryParam  ]   
  /byZipcode:
    description: This API resource is used to fetch the weather based on the zipcode of the city
    get:
      description: This API resource is used to fetch the weather based on the name of the city
      is: [ 200-item: {itemType: customtype.Item , itemExample: !include examples/responses/2xx-item-response.json}, 304-fault,400-fault,401-fault,403-fault,404-fault,405-fault,406-fault,407-fault,415-fault,422-fault,429-fault,500-fault,503-fault,504-fault,
          byZipcodeQueryParam  ]
/forecast:
  /byCityForecast:
    description: This API resource is used to fetch the weather forecast based on the city name and date(within the 5day date range)
    get:
      description: This API resource is used to fetch the weather forecast based on the name of the city and date(within the 5day date range)
      is: [ 200-item: {itemType: customtype.Item , itemExample: !include examples/responses/2xx-item-response.json}, 304-fault,400-fault,401-fault,403-fault,404-fault,405-fault,406-fault,407-fault,415-fault,422-fault,429-fault,500-fault,503-fault,504-fault,
          byCityForecastQueryParam  ]
      
